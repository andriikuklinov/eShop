// <auto-generated />
using Catalog.DAL.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catalog.DAL.Migrations
{
    [DbContext(typeof(CatalogDataContext))]
    [Migration("20241009124951_ConfigureProductEntity")]
    partial class ConfigureProductEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Catalog.DAL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageSrc")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Name = "tire 24 67 78",
                            Price = 860.89m,
                            Summary = "tire 24 67 78"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "tire 21 60 77",
                            Price = 849.11m,
                            Summary = "tire 21 60 77"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "tire 27 64 79",
                            Price = 890.00m,
                            Summary = "tire 27 64 79"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "AGM 26 78",
                            Price = 890.00m,
                            Summary = "AGM 26 78"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "AGM 66 78 98",
                            Price = 811.09m,
                            Summary = "AGM 66 78 98"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Name = "AGM 11 66 77",
                            Price = 890.10m,
                            Summary = "AGM 11 66 77"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
